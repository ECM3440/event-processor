name: Pull Request

on:
  pull_request:
    branches:
      - "main"

env:
  DOCKER_FILE_PATH: Dockerfile

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
    if: "! contains(toJSON(github.event.commits.*.message), '[skip-ci]')"

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Generate Tag
        id: generate_tag
        run: |
          sha=${{ github.event.pull_request.head.sha }}
          tag="SNAPSHOT-PR-${{ github.event.pull_request.number }}-${sha:0:8}"
          echo "##[set-output name=GIT_TAG;]$(echo ${tag})"

      - name: Login to Docker Hub
        uses: azure/docker-login@v1
        with:
          login-server: ${{ secrets.REGISTRY_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Generate image repository path
        id: image_repository_op
        run: |
          echo IMAGE_REPOSITORY=$(echo ${{ secrets.REGISTRY_LOGIN_SERVER }}/${{ github.repository }} | tr '[:upper:]' '[:lower:]') >> $GITHUB_ENV

      - name: Build and push image
        run: |
          docker build ${{ env.DOCKER_FILE_PATH }} -t ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }} --build-arg SERVICEBUS_CONNECTION_STR="${{ secrets.SERVICEBUS_CONNECTION_STR }}" --build-arg SERVICEBUS_TOPIC_NAME="${{ secrets.SERVICEBUS_TOPIC_NAME }}" --build-arg SERVICEBUS_SUBSCRIPTION_NAME="${{ secrets.SERVICEBUS_SUBSCRIPTION_NAME }}"
          docker push ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}

      - name: Comment on PR
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ECM3440_GITHUB_TOKEN }}
        with:
          message: "@${{ github.actor }} Image is available for testing. `docker pull ${{ env.IMAGE_REPOSITORY }}:${{ steps.generate_tag.outputs.GIT_TAG }}`"
          allow-repeats: false

      - name: Notify Failure
        if: failure()
        uses: mshick/add-pr-comment@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ECM3440_GITHUB_TOKEN }}
        with:
          message: "@${{ github.actor }} Yikes! You better fix it before anyone else finds out! [Build](https://github.com/${{ github.repository }}/commit/${{ github.event.pull_request.head.sha }}/checks) has Failed!"
          allow-repeats: false
